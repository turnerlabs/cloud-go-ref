machine:
  services:
    - docker
  environment:
    GCLOUD_PROJECT: "cloud-go-ref"
    #GO15VENDOREXPERIMENT : "1"
    #GODIST: "go1.6.linux-amd64.tar.gz"
  pre:
    #- echo 'EXPORT GO15VENDOREXPERIMENT=1'
  post:
    #- mkdir -p download
    #- test -e download/$GODIST || curl -o download/$GODIST https://storage.googleapis.com/golang/$GODIST
    #- sudo rm -rf /usr/local/go
    #- sudo tar -C /usr/local -xzf download/$GODIST



dependencies:
  override:
    # just build, no go get (because we are vendored)
    #- mkdir -p $HOME/.go_project/src/github.com/$CIRCLE_PROJECT_USERNAME
    #- ln -fs $HOME/$CIRCLE_PROJECT_REPONAME $HOME/.go_project/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
    #- |
    #  echo 'export GOPATH=$HOME/.go_project/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$GOPATH' >> ~/.circlerc
    - go get github.com/gorilla/mux
    # build a binary artifact.  Maybe add it to s3 or something...
    - GOOS=linux CGO_ENABLED=0 go build -a
    # build a docker image
    #- docker build -t turner/cloud-go-ref:$CIRCLE_SHA1  .
    - docker build -t gcr.io/$GCLOUD_PROJECT/cloud-go-ref  .
    - echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
    #- gcloud --quiet components update
    - gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
    - gcloud config set project $GCLOUD_PROJECT

    # push the image to google
    - gcloud docker push gcr.io/$GCLOUD_PROJECT/cloud-go-ref
